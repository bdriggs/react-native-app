{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brittonriggs/gitRepos/react-native-app/app/components/AppPicker.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport colors from \"../config/colors\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"./Screen\";\nimport AppText from \"./AppText/AppText\";\nimport PickerItem from \"./PickerItem\";\n\nfunction AppPicker(_ref) {\n  var _this = this;\n\n  var icon = _ref.icon,\n      items = _ref.items,\n      placeholder = _ref.placeholder;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, icon && React.createElement(MaterialCommunityIcons, {\n    name: icon,\n    size: 20,\n    color: defaultStyles.colors.medium,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), React.createElement(AppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, placeholder), React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-down\",\n    size: 20,\n    color: defaultStyles.colors.medium,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), React.createElement(Modal, {\n    visible: modalVisible,\n    animationType: \"slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Close\",\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), React.createElement(FlatList, {\n    data: items,\n    keyExtractor: function keyExtractor(item) {\n      return item.value.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      React.createElement(PickerItem, {\n        label: item.label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.light,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    padding: 15,\n    width: \"100%\"\n  },\n  icon: {\n    marginRight: 10\n  },\n  textInput: {\n    fontSize: 18,\n    fontFamily: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\",\n    color: colors.dark\n  },\n  text: {\n    flex: 1\n  }\n});\nexport default AppPicker;","map":{"version":3,"sources":["/Users/brittonriggs/gitRepos/react-native-app/app/components/AppPicker.js"],"names":["React","useState","MaterialCommunityIcons","colors","defaultStyles","Screen","AppText","PickerItem","AppPicker","icon","items","placeholder","modalVisible","setModalVisible","styles","container","medium","text","item","value","toString","label","StyleSheet","create","backgroundColor","light","borderRadius","flexDirection","padding","width","marginRight","textInput","fontSize","fontFamily","Platform","OS","color","dark","flex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n  Modal,\n  Button,\n  FlatList,\n} from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nimport colors from \"../config/colors\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"./Screen\";\nimport AppText from \"./AppText/AppText\";\nimport PickerItem from \"./PickerItem\";\n\nfunction AppPicker({ icon, items, placeholder }) {\n  const [modalVisible, setModalVisible] = useState(false);\n  return (\n    <>\n      <TouchableWithoutFeedback\n        onPress={() => {\n          setModalVisible(true);\n        }}\n      >\n        <View style={styles.container}>\n          {icon && (\n            <MaterialCommunityIcons\n              name={icon}\n              size={20}\n              color={defaultStyles.colors.medium}\n              style={styles.icon}\n            />\n          )}\n          <AppText style={styles.text}>{placeholder}</AppText>\n          <MaterialCommunityIcons\n            name=\"chevron-down\"\n            size={20}\n            color={defaultStyles.colors.medium}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n      <Modal visible={modalVisible} animationType=\"slide\">\n        <Screen>\n          <Button title=\"Close\" onPress={() => setModalVisible(false)} />\n          <FlatList\n            data={items}\n            keyExtractor={(item) => item.value.toString()}\n            renderItem={({ item }) => {\n              <PickerItem label={item.label} />;\n            }}\n          />\n        </Screen>\n      </Modal>\n    </>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.light,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    padding: 15,\n    width: \"100%\",\n  },\n  icon: {\n    marginRight: 10,\n  },\n  textInput: {\n    fontSize: 18,\n    fontFamily: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\",\n    color: colors.dark,\n  },\n  text: {\n    flex: 1,\n  },\n});\n\nexport default AppPicker;\n"]},"metadata":{},"sourceType":"module"}